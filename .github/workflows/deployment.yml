name: Build, test and deploy

env:
  ACR_URL: taxbeacon.azurecr.io

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'dev' && 'dev' || github.ref_name == 'qa' && 'qa' || 'prod' }}
    if: github.event_name == 'pull_request'
    steps:
      - run: echo ${{ github.ref_name }}


  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'dev' && 'dev' || github.ref_name == 'qa' && 'qa' || 'prod' }}
    if: github.event_name == 'push' #&& github.event.pull_request.base.ref == 'main'
    steps:
      - run: echo ${{ github.ref_name }}

      - uses: actions/checkout@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Log in to ACR
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.ACR_URL }}/${{ secrets.CONTAINER_APP_NAME }}:${{ github.sha }}
          file: ./Dockerfile

  deploy:
    name: Deployment job
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.ref_name == 'dev' && 'dev' || github.ref_name == 'qa' && 'qa' || 'prod' }}

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ secrets.CONTAINER_APP_NAME }} -g ${{secrets.RG_NAME}} --server ${{env.ACR_URL}} --username  ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}
            az containerapp update -n ${{ secrets.CONTAINER_APP_NAME }} -g ${{secrets.RG_NAME}} --image ${{ env.ACR_URL }}/${{ secrets.CONTAINER_APP_NAME }}:${{ github.sha }}

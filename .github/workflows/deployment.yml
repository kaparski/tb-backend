name: Build, test and deploy

env:
  ACR_URL: taxbeacon.azurecr.io

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  tests:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'qa' && 'qa' || 'dev' }}
#    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.*'
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test


  build:
    runs-on: ubuntu-latest
    needs: tests
    environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'qa' && 'qa' || 'dev' }}
    #if: github.event_name == 'push'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - run: pwd ${{ github.workspace }}

      - name: Edit a .NET Core database connection string in appsettings.json
        uses: benday-inc/edit-dbconnstr-in-appsettings@v1.3
        with:
          name: DefaultConnection
          connectionString: ${{secrets.CONNECTION_STRING}}
          pathToSettingsFile: '${{ github.workspace }}/src/TaxBeacon.API/appsettings.json'

      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - run: |
            docker build -f ${{ github.workspace }}/src/TaxBeacon.API/Dockerfile -t ${{ env.ACR_URL }}/${{ secrets.CONTAINER_APP_NAME }}:${{ github.sha }} .
            docker push ${{ env.ACR_URL }}/${{ secrets.CONTAINER_APP_NAME }}:${{ github.sha }}

  deploy:
    name: Deployment job
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'qa' && 'qa' || 'dev' }}

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ secrets.CONTAINER_APP_NAME }} -g ${{secrets.RG_NAME}} --server ${{env.ACR_URL}} --username  ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}
            az containerapp update -n ${{ secrets.CONTAINER_APP_NAME }} -g ${{secrets.RG_NAME}} --image ${{ env.ACR_URL }}/${{ secrets.CONTAINER_APP_NAME }}:${{ github.sha }}

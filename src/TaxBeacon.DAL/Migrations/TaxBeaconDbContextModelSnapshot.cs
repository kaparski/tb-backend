// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxBeacon.DAL;

#nullable disable

namespace TaxBeacon.DAL.Migrations
{
    [DbContext(typeof(TaxBeaconDbContext))]
    partial class TaxBeaconDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxBeacon.DAL.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.RoleTenantPermission", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenantId", "RoleId", "PermissionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantId", "PermissionId");

                    b.ToTable("RoleTenantPermissions");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.RoleTenantUser", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenantId", "RoleId", "UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("RoleTenantUsers");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.TenantPermission", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenantId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("TenantPermissions");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.TenantUser", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenantId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TenantUsers");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(202)
                        .HasColumnType("nvarchar")
                        .HasComputedColumnSql("TRIM(CONCAT([FirstName], ' ', [LastName]))", true);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.RoleTenantPermission", b =>
                {
                    b.HasOne("TaxBeacon.DAL.Entities.Role", "Role")
                        .WithMany("RoleTenantPermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaxBeacon.DAL.Entities.TenantPermission", "TenantPermission")
                        .WithMany("RoleTenantPermissions")
                        .HasForeignKey("TenantId", "PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("TenantPermission");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.RoleTenantUser", b =>
                {
                    b.HasOne("TaxBeacon.DAL.Entities.Role", "Role")
                        .WithMany("RoleTenantUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaxBeacon.DAL.Entities.User", null)
                        .WithMany("RolesTenantUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaxBeacon.DAL.Entities.TenantUser", "TenantUser")
                        .WithMany("RoleTenantUsers")
                        .HasForeignKey("TenantId", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("TenantUser");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.TenantPermission", b =>
                {
                    b.HasOne("TaxBeacon.DAL.Entities.Permission", "Permission")
                        .WithMany("TenantPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaxBeacon.DAL.Entities.Tenant", "Tenant")
                        .WithMany("TenantPermissions")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.TenantUser", b =>
                {
                    b.HasOne("TaxBeacon.DAL.Entities.Tenant", "Tenant")
                        .WithMany("TenantUsers")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaxBeacon.DAL.Entities.User", "User")
                        .WithMany("TenantUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.Permission", b =>
                {
                    b.Navigation("TenantPermissions");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.Role", b =>
                {
                    b.Navigation("RoleTenantPermissions");

                    b.Navigation("RoleTenantUsers");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.Tenant", b =>
                {
                    b.Navigation("TenantPermissions");

                    b.Navigation("TenantUsers");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.TenantPermission", b =>
                {
                    b.Navigation("RoleTenantPermissions");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.TenantUser", b =>
                {
                    b.Navigation("RoleTenantUsers");
                });

            modelBuilder.Entity("TaxBeacon.DAL.Entities.User", b =>
                {
                    b.Navigation("RolesTenantUsers");

                    b.Navigation("TenantUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
